"use strict";(self.webpackChunkjules_website=self.webpackChunkjules_website||[]).push([[148],{4137:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return u}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),u=r,f=m["".concat(l,".").concat(u)]||m[u]||d[u]||o;return n?a.createElement(f,i(i({ref:t},p),{},{components:n})):a.createElement(f,i({ref:t},p))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1356:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},assets:function(){return p},toc:function(){return d},default:function(){return u}});var a=n(7462),r=n(3366),o=(n(7294),n(4137)),i=["components"],s={title:"Golden White Noise"},l=void 0,c={permalink:"/home/blog/2021/03/19/golden-white-noise",source:"@site/blog/2021-03-19-golden-white-noise.md",title:"Golden White Noise",description:"Every person interested in rendering through fragment shaders has already come across a function like this to generate some white noise:",date:"2021-03-19T00:00:00.000Z",formattedDate:"March 19, 2021",tags:[],readingTime:1.525,truncated:!0,authors:[]},p={authorsImageUrls:[]},d=[],m={toc:d};function u(e){var t=e.components,s=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},m,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Every person interested in rendering through fragment shaders has already come across a function like this to generate some white noise:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-glsl"},"float random(vec2 uv) {\n    return fract(sin(dot(uv ,vec2(12.9898,78.233))) * 43758.5453);\n}\n")),(0,o.kt)("p",null,"And I used it too, until someone pointed out a big problem to me: on her device my artworks were all messed up! And it turned\nout that many people were actually encountering the same problem. (You can see the artifacts in the comparison at the end)"),(0,o.kt)("p",null,"After a bit of investigation I tracked it down to the ",(0,o.kt)("inlineCode",{parentName:"p"},"random")," function that was not producing reliable results!\nIt turned out that depending on the precision of floats supported by your GPU the results were different. For low precision floats the quality of the distribution gets noticeably degraded."),(0,o.kt)("p",null,"And at this moment I remembered that guy at the bottom of a StackOverflow discussion claiming that his ",(0,o.kt)("inlineCode",{parentName:"p"},"Gold Noise")," was much better.\nAnd guess what, he was right! So thank you Dominic Cerisano for this lovely piece of code!"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-glsl"},"// Gold Noise \xa92015 dcerisano@standard3d.com\n// - based on the Golden Ratio\n// - uniform normalized distribution\n// - fastest static noise generator function (also runs at low precision)\n\nfloat PHI = 1.61803398874989484820459;  // \u03a6 = Golden Ratio   \n\nfloat gold_noise(in vec2 xy, in float seed){\n    return fract(tan(distance(xy*PHI, xy)*seed)*xy.x);\n}\n")),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Alternatively, you can rely on ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ashima/webgl-noise"},"https://github.com/ashima/webgl-noise")," for your Perlin / simplex / fractal / ",(0,o.kt)("em",{parentName:"p"},"etc.")," noise functions since they don't make use of these pseudorandom number generators."))),(0,o.kt)("p",null,"And here is a comparison of the visual results. ",(0,o.kt)("inlineCode",{parentName:"p"},"Gold Noise")," produces the same (artifact-free) results on all the GPUs I could test with:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null}),(0,o.kt)("th",{parentName:"tr",align:null},"Classic white noise"),(0,o.kt)("th",{parentName:"tr",align:null},"Gold Noise"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Potato GPU")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("img",{alt:"classic potato",src:n(6257).Z})),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("img",{alt:"golden potato",src:n(9902).Z}))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Good GPU")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("img",{alt:"classic good",src:n(3379).Z})),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("img",{alt:"golden good",src:n(5636).Z}))))),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Links")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},(0,o.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/4200224/random-noise-functions-for-glsl"},(0,o.kt)("em",{parentName:"a"},"The corresponding StackOverflow discussion")),(0,o.kt)("br",null),"\n",(0,o.kt)("a",{parentName:"p",href:"https://www.shadertoy.com/view/fsf3DN"},(0,o.kt)("em",{parentName:"a"},"A live comparison of the different types of white noise"))))))}u.isMDXComponent=!0},3379:function(e,t,n){t.Z=n.p+"assets/images/classic_good-2ca390608a6fb40f51a968da71ee716f.png"},6257:function(e,t,n){t.Z=n.p+"assets/images/classic_potato-132779f4f081fbd883fdc61b5da57c42.png"},5636:function(e,t,n){t.Z=n.p+"assets/images/golden_good-89ce89a2396dca3188420e62ec52cb68.png"},9902:function(e,t,n){t.Z=n.p+"assets/images/golden_potato-6133e3bbe78d14874c7d00fbe65c85aa.png"}}]);